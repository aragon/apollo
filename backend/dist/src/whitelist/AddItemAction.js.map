{"version":3,"file":"AddItemAction.js","sourceRoot":"","sources":["../../../src/whitelist/AddItemAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,kDAAgD;AAEhD,uFAAsG;AAGtG;IAA2C,iCAAiC;IAA5E;;IAuCA,CAAC;IA3Bc,uCAAe,GAAzB,UAA0B,OAAuB;QAC9C,IAAI,CAAC,mBAAS,CAAE,OAAO,CAAC,IAAwB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACjE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAA;SAChD;QAED,IAAK,OAAO,CAAC,IAAwB,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,EAAE;YACxD,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAA;SAChD;QAED,OAAO,OAAO,CAAA;IAClB,CAAC;IAWM,+BAAO,GAAd;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CACxB,IAAI,CAAC,OAAO,CAAC,IAAwB,CAAC,OAAO,CAAC,SAAS,EACtD,IAAI,CAAC,OAAO,CAAC,IAAwB,CAAC,OAAO,CAAC,OAAkB,CACrE,CAAA;IACL,CAAC;IACL,oBAAC;AAAD,CAAC,AAvCD,CAA2C,iCAAuB,GAuCjE","sourcesContent":["import {isAddress} from '@ethersproject/address'\nimport { FastifyRequest } from 'fastify'\nimport AbstractWhitelistAction, { WhitelistParams } from \"../../lib/whitelist/AbstractWhitelistAction\"\nimport {ListItem} from '../db/Whitelist'\n\nexport default class AddItemAction extends AbstractWhitelistAction<ListItem> {\n    /**\n      * Validates the given request body.\n      * \n      * @method validateRequest \n      * \n      * @param {FastifyRequest} request \n      * \n      * @returns {FastifyRequest}\n      * \n      * @protected\n      */\n     protected validateRequest(request: FastifyRequest): FastifyRequest {\n        if (!isAddress((request.body as WhitelistParams).message.publicKey)) {\n            throw new Error('Invalid public key passed!')\n        }\n\n        if ((request.body as WhitelistParams).message.txLimit == 0) {\n            throw new Error('Invalid rate limit passed!')\n        }\n\n        return request\n    }\n\n    /**\n     * Adds a new item to the whitelist\n     * \n     * @method execute\n     * \n     * @returns {Promise<ListItem>}\n     * \n     * @public\n     */\n    public execute(): Promise<ListItem> {\n        return this.whitelist.addItem(\n            (this.request.body as WhitelistParams).message.publicKey,\n            ((this.request.body as WhitelistParams).message.txLimit as number)\n        )\n    }\n}\n"]}