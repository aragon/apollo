{"version":3,"file":"ContractFunction.js","sourceRoot":"","sources":["../../../lib/transactions/ContractFunction.ts"],"names":[],"mappings":";;AAAA,0CAA6E;AAC7E,4CAAwC;AAExC;IAuBI,0BACI,OAAqB,EACb,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;QAE1B,IAAI,CAAC,OAAO,GAAG,cAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;QAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA;IAC1C,CAAC;IAWM,iCAAM,GAAb;QACI,OAAO,SAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACzB,CACI,qBAAe,CAAC,MAAM,CAClB,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,IAAI,CAAC,iBAAiB,CACxB,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CACrB,CAAA;IACb,CAAC;IAWM,iCAAM,GAAb;QACI,OAAO,qBAAe,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAU,CAAA;IACjG,CAAC;IACL,uBAAC;AAAD,CAAC,AA9DD,IA8DC","sourcesContent":["import { defaultAbiCoder, Fragment, JsonFragment } from '@ethersproject/abi';\nimport { id } from '@ethersproject/hash'\n\nexport default class ContractFunction {\n    /**\n     * The decoded function arguments\n     * \n     * @property {Result} functionArguments\n     * \n     * @private\n     */\n    public functionArguments: any[];\n\n    /**\n     * The ABI item as ethers.js Fragment object\n     * \n     * @property {Fragment} abiItem\n     */\n    private abiItem: Fragment;\n\n    /**\n     * @param {any} abiItem\n     * @param {string} requestMsg\n     * \n     * @constructor\n     */\n    constructor(\n        abiItem: JsonFragment,\n        private requestMsg: string,\n    ) { \n        this.abiItem = Fragment.fromObject(abiItem)\n        this.functionArguments = this.decode()\n    }\n\n    /**\n     * Encodes the function by the given ABI item and the function parameters\n     * \n     * @method encode\n     * \n     * @returns {string}\n     * \n     * @public  \n     */\n    public encode(): string {\n        return id(this.abiItem.format()) +\n               (\n                   defaultAbiCoder.encode(\n                       this.abiItem.inputs,\n                       this.functionArguments\n                    ).replace('0x','')\n                )\n    }\n\n    /**\n     * Returns the decoded values by the given ABI item and the request message\n     * \n     * @method decode\n     * \n     * @returns {Result}\n     * \n     * @public\n     */\n    public decode(): any[] {\n        return defaultAbiCoder.decode(this.abiItem.inputs, '0x' + this.requestMsg.slice(10)) as any[]\n    }\n}\n"]}